services:
#    Doctrine\ORM\EntityManager: '@doctrine.orm.default_entity_manager'
#    JMS\Serializer\SerializerInterface: '@jms_serializer.serializer'
#    League\Tactician\CommandBus: '@tactician.commandbus.default'

    # Legacy aliases
    game_mode_event: '@App\Infrastructure\Post\Factory\Form\Event\GameModeEvent'
    post_repository: '@App\Infrastructure\Post\Repository\PostRepository'
    riftrun_factory_post: '@App\Infrastructure\Post\Factory\PostFormFactory'
    common_standard_criteria: '@App\Infrastructure\Common\Doctrine\ORM\StandardCriteriaOperator'
    common_discriminator_criteria: '@App\Infrastructure\Common\Doctrine\ORM\DiscriminatorCriteriaOperator'

    # =========== Split into separate files ========== #
    Doctrine\ORM\EntityRepository:
        abstract: true
        factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
        calls:
          - method: setCriteria
            arguments:
               - '@common_standard_criteria'
               - '@common_discriminator_criteria'
        public: false

    App\Infrastructure\Common\Doctrine\ORM\StandardCriteriaOperator:
    App\Infrastructure\Common\Doctrine\ORM\DiscriminatorCriteriaOperator:

    App\Infrastructure\Post\Repository\PostRepository:
        arguments:
          - 'App\Domain\Post\Model\Post'
        parent: Doctrine\ORM\EntityRepository

    App\Infrastructure\Post\Factory\PostFormFactory:
        parent: App\Infrastructure\Common\Factory

    App\Infrastructure\Common\Factory:
        abstract: true
        arguments:
           - '@form.factory'

    App\Application\UseCase\Post\CreatePostCommandHandler:
         arguments:
            - '@post_repository'
            - '@riftrun_factory_post'
         public: true
         tags:
            - { name: tactician.handler, command: App\Application\UseCase\Post\Request\CreatePost }

    App\Application\UseCase\Post\GetPostHandler:
        arguments:
            - '@post_repository'
        public: true
        tags:
            - { name: tactician.handler, command: App\Application\UseCase\Post\Request\GetPost }

    App\Application\UseCase\Post\FindPostHandler:
        public: true
        arguments:
            - '@post_repository'
        tags:
            - { name: tactician.handler, command: App\Application\UseCase\Post\Request\FindPost }

    App\Infrastructure\Post\Factory\Form\Event\GameModeEvent:
        arguments:
            - '@validator'

    App\Infrastructure\Post\Factory\Form\PostType:
        arguments:
            - '@game_mode_event'
        tags: [form.type]
        public: false