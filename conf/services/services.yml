services:
    JMS\Serializer\SerializerInterface: '@jms_serializer.serializer'
#    Hateoas\Representation\Factory\PagerfantaFactory: '@pager_fanta_factory'
#    Doctrine\Common\DataFixtures\Purger\PurgerInterface: '@standard_orm_purger'
#    App\Factories\LoaderFactory: '@nelmio_loader_factory'
    League\Tactician\CommandBus: '@tactician.commandbus.default'

    # Legacy aliases
    game_mode_event: '@App\Infrastructure\Post\Factory\Form\Event\GameModeEvent'
    post_repository: '@App\Infrastructure\Post\Repository\PostRepository'
    riftrun_factory_post: '@App\Infrastructure\Post\Factory\PostFormFactory'

#    standard_orm_purger:
#        class: Doctrine\Common\DataFixtures\Purger\ORMPurger

#    pager_fanta_factory:
#        class: Hateoas\Representation\Factory\PagerfantaFactory

#    load_fixtures_cli:
#        class: App\Cli\DatabaseSeederCommand
#        tags:
#            -  { name: console.command }

#    clear_database_cli:
#        class: App\Cli\DatabaseClearCommand
#        tags:
#            -  { name: console.command }

    # Factories
#    nelmio_loader_factory:
#        class: App\Factories\AliceLoaderFactory
#        arguments:
#            - '@fidry_alice_data_fixtures.doctrine.persister_loader'

    # =========== Split into separate files ========== #
    Doctrine\ORM\EntityInterface:
        abstract: true
        factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
        public: false

    App\Infrastructure\Post\Repository\PostRepository:
        arguments:
          - 'App\Domain\Post\Model\Post'
        parent: Doctrine\ORM\EntityInterface

    App\Infrastructure\Post\Factory\PostFormFactory:
        parent: App\Infrastructure\Common\Factory

    App\Infrastructure\Common\Factory:
        abstract: true
        arguments:
           - '@form.factory'

    App\Application\UseCase\Post\CreatePostCommandHandler:
         arguments:
            - '@post_repository'
            - '@riftrun_factory_post'
         public: true
         tags:
            - { name: tactician.handler, command: App\Application\UseCase\Post\Request\CreatePost }

    App\Application\UseCase\Post\GetPostHandler:
        arguments:
            - '@post_repository'
        public: true
        tags:
            - { name: tactician.handler, command: App\Application\UseCase\Post\Request\GetPost }

    App\Application\UseCase\Post\FindPostHandler:
        public: true
        arguments:
            - '@post_repository'
        tags:
            - { name: tactician.handler, command: App\Application\UseCase\Post\Request\FindPost }

    App\Infrastructure\Post\Factory\Form\Event\GameModeEvent:
        arguments:
            - '@validator'

    App\Infrastructure\Post\Factory\Form\PostType:
        arguments:
            - '@game_mode_event'
        tags: [form.type]
        public: false